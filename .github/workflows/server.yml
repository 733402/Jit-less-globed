name: Build Globed server

on:
  workflow_dispatch:
  push:

jobs:
  build:
    name: Build Globed server
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: Linux x64

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: Linux arm64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: Windows x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - name: Install aarch64-linux-gnu-gcc
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Add rust target
        run: rustup target add ${{ matrix.target }}

      - name: Build game server
        run: |
          cd server
          cargo build --release --target ${{ matrix.target }} -p globed-game-server
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - name: Build central server
        run: |
          cd server
          cargo build --release --target ${{ matrix.target }} -p globed-central-server
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - name: Package artifacts
        run: |
          mkdir -p server/artifacts
          cp server/target/${{ matrix.target }}/release/globed-game-server* server/artifacts/
          cp server/target/${{ matrix.target }}/release/globed-central-server* server/artifacts/
          if [[ ${{ matrix.os }} == 'windows-latest' ]]; then
            zip -j artifacts-${{ matrix.target }}.zip server/artifacts/*.exe
          else
            zip -j artifacts-${{ matrix.target }}.zip server/artifacts/*
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-build
          path: artifacts-${{ matrix.target }}.zip